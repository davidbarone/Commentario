<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Dbarone.Net.CommentarioServer</name>
    </assembly>
    <members>
        <member name="T:Dbarone.Net.CommentarioServer.DocumentGenerator">
            <summary>
            Main entry point to CommentarioServer. Generates documents from xml comments and the assembly file.
            </summary>
        </member>
        <member name="P:Dbarone.Net.CommentarioServer.DocumentGenerator.OutputType">
            <summary>
            The document output format.
            </summary>
        </member>
        <member name="P:Dbarone.Net.CommentarioServer.DocumentGenerator.XmlCommentsPath">
            <summary>
            The xml comments path.
            </summary>
        </member>
        <member name="P:Dbarone.Net.CommentarioServer.DocumentGenerator.AssemblyPath">
            <summary>
            The assembly file path.
            </summary>
        </member>
        <member name="P:Dbarone.Net.CommentarioServer.DocumentGenerator.OutputPath">
            <summary>
            The documentation output path. 
            </summary>
        </member>
        <member name="P:Dbarone.Net.CommentarioServer.DocumentGenerator.ReadMePath">
            <summary>
            Optional path to an assembly readme. The contents are included at the top of the documentation file. 
            </summary>
        </member>
        <member name="P:Dbarone.Net.CommentarioServer.DocumentGenerator.Comments">
            <summary>
            The xml comments.
            </summary>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.DocumentGenerator.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new DocumentGenerator instance.
            </summary>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.DocumentGenerator.GenerateDocument">
            <summary>
            Generates document.
            </summary>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.DocumentGenerator.RenderTypeGenericArguments(System.Type)">
            <summary>
            Renders the type's generic arguments.
            </summary>
            <param name="type">The type to render.</param>
            <returns>A string representing the generic arguments.</returns>
        </member>
        <member name="T:Dbarone.Net.CommentarioServer.ExtensionMethods">
            <summary>
            Useful extension methods. Primarily to provide reflection services.
            </summary>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.ExtensionMethods.ToCommentId(System.Reflection.MemberInfo)">
            <summary>
            Returns a comment id string for a given type member. Can be used to locate the comments from xml comments file. 
            </summary>
            <param name="member">The MemberInfo object.</param>
            <returns>Returns a comment id string.</returns>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.ExtensionMethods.ToCommentId(System.Type)">
            <summary>
            Returns a comment id string for a type which can be used to locate the type comments from the xml comments file
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.ExtensionMethods.GetTypeGenericArguments(System.Type)">
            <summary>
            Gets the type letter arguments for a generic type.
            </summary>
            <param name="type">A type. Must be a generic type.</param>
            <returns>Returns an array of type parameter names.</returns>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.ExtensionMethods.IsGeneric(System.Type)">
            <summary>
            Checks if a type is a generic type.
            </summary>
            <param name="type">The type to check.</param>
            <returns>Returns true if the type is a generic type.</returns>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.ExtensionMethods.IsNullable(System.Type,System.Type@)">
            <summary>
            Checks whether a type is a nullable type.
            </summary>
            <param name="type">The type to check.</param>
            <param name="underlyingType">Returns true if the type is a nullable type.</param>
            <returns></returns>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.ExtensionMethods.GetSignature(System.Reflection.MethodInfo,System.Boolean)">
            <summary>
            Gets the signature for a method.
            </summary>
            <param name="method">The method to get the signature for.</param>
            <param name="isInvokable"></param>
            <returns>Returns a signature.</returns>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.ExtensionMethods.GetSignature(System.Reflection.ConstructorInfo,System.Boolean)">
            <summary>
            Gets the signature for a constructor method.
            </summary>
            <param name="constructor">The constructor to get the signature for.</param>
            <param name="isInvokable"></param>
            <returns>Returns a signature.</returns>
        </member>
        <member name="T:Dbarone.Net.CommentarioServer.OutputType">
            <summary>
            Specifies the output type for the documentation.
            </summary>
        </member>
        <member name="F:Dbarone.Net.CommentarioServer.OutputType.html">
            <summary>
            Html format.
            </summary>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.MethodBaseSignature.GetAccessModifier(System.Reflection.MethodBase)">
            <summary>
            Gets the method access modifier.
            https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/access-modifiers
            </summary>
            <param name="method">The method</param>
            <returns>Returns the access modifier.</returns>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.TypeSignature.Build(System.Type)">
            <summary>
            Get a fully qualified signature for <paramref name="type"/>
            </summary>
            <param name="type">Type. May be generic or <see cref="T:System.Nullable`1"/></param>
            <returns>Fully qualified signature</returns>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.TypeSignature.BuildGenerics(System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Takes an <see cref="T:System.Collections.Generic.IEnumerable`1"/> and creates a generic type signature (&lt;string, string&gt; for example)
            </summary>
            <param name="genericArgumentTypes"></param>
            <returns>Generic type signature like &lt;Type, ...&gt;</returns>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.TypeSignature.GetQualifiedTypeName(System.Type)">
            <summary>
            Gets the fully qualified type name of <paramref name="type"/>.
            This will use any keywords in place of types where possible (string instead of System.String for example)
            </summary>
            <param name="type"></param>
            <returns>The fully qualified name for <paramref name="type"/></returns>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.TypeSignature.RemoveGenericTypeNameArgumentCount(System.String)">
            <summary>
            This removes the `{argumentcount} from a the signature of a generic type
            </summary>
            <param name="genericTypeSignature">Signature of a generic type</param>
            <returns><paramref name="genericTypeSignature"/> without any argument count</returns>
        </member>
        <member name="T:Dbarone.Net.CommentarioServer.DocumentNode">
            <summary>
            Represents the root node of the xml comments file.
            </summary>
        </member>
        <member name="P:Dbarone.Net.CommentarioServer.DocumentNode.Assembly">
            <summary>
            The assembly node. Provides information about the assembly.
            </summary>
        </member>
        <member name="P:Dbarone.Net.CommentarioServer.DocumentNode.Members">
            <summary>
            The collection of members. All documentation nodes whether for Type documentation or Member documentation are included in this collection.
            </summary>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.DocumentNode.GetDocumentForType(System.Type)">
            <summary>
            Gets the xml comment node for a specific type.
            </summary>
            <param name="type">The type to get document for.</param>
            <returns>Returns the document node for the type.</returns>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.DocumentNode.GetDocumentForMember(System.Reflection.MemberInfo)">
            <summary>
            Gets the xml comment node for the specific member.
            </summary>
            <param name="member">The member to get the document for.</param>
            <returns>Returns the document node for the member.</returns>
        </member>
        <member name="T:Dbarone.CommentarioServer.IDString">
            <summary>
            Represents the parts making up a comment document id, known as the 'ID string'.
            https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/documentation-comments
            </summary>
        </member>
        <member name="P:Dbarone.CommentarioServer.IDString.Id">
            <summary>
            The full member id string. In format [MemberType]:[memberid]
            </summary>
        </member>
        <member name="P:Dbarone.CommentarioServer.IDString.FullyQualifiedName">
            <summary>
            The id value after the initial ':' character.
            </summary>
        </member>
        <member name="P:Dbarone.CommentarioServer.IDString.MemberType">
            <summary>
            The member type.
            </summary>
        </member>
        <member name="P:Dbarone.CommentarioServer.IDString.Name">
            <summary>
            The name of the type or member. This optionally includes the namespace and the parent / enclosing type name. 
            </summary>
        </member>
        <member name="P:Dbarone.CommentarioServer.IDString.MemberName">
            <summary>
            The member name. Only applies for members.
            </summary>
        </member>
        <member name="P:Dbarone.CommentarioServer.IDString.FullyQualifiedNameLink">
            <summary>
            Unique link tag based on fully qualified name. Used for generaing links for TOC etc.
            </summary>
        </member>
        <member name="P:Dbarone.CommentarioServer.IDString.ParentTypeArguments">
            <summary>
            The number of generic type arguments on the parent type / class. 
            </summary>
        </member>
        <member name="P:Dbarone.CommentarioServer.IDString.TypeArguments">
            <summary>
            The number of generic type arguments on the current member. 
            </summary>
        </member>
        <member name="P:Dbarone.CommentarioServer.IDString.Arguments">
            <summary>
            Arguments (if exist for methods and properties).
            </summary>
        </member>
        <member name="M:Dbarone.CommentarioServer.IDString.#ctor(System.String)">
            <summary>
            constructor for IDString class.
            </summary>
            <param name="id">The ID string.</param>
        </member>
        <member name="T:Dbarone.CommentarioServer.MemberType">
            <summary>
            The member type.
            </summary>
        </member>
        <member name="T:XmlComments">
            <summary>
            Class to process the xml comments file
            </summary>
        </member>
    </members>
</doc>
