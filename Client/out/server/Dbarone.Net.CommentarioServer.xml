<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Dbarone.Net.CommentarioServer</name>
    </assembly>
    <members>
        <member name="T:Dbarone.Net.CommentarioServer.DocumentGenerator">
            <summary>
            Main entry point to CommentarioServer. Generates documents from xml comments and the assembly file.
            </summary>
            <remarks>
            Note that this class is an abstract base class. Implementations are included in sub classes.
            </remarks>
        </member>
        <member name="P:Dbarone.Net.CommentarioServer.DocumentGenerator.AssemblyPath">
            <summary>
            The assembly file path.
            </summary>
        </member>
        <member name="P:Dbarone.Net.CommentarioServer.DocumentGenerator.OutputPath">
            <summary>
            The documentation output path. 
            </summary>
        </member>
        <member name="P:Dbarone.Net.CommentarioServer.DocumentGenerator.OutputType">
            <summary>
            The document output format.
            </summary>
        </member>
        <member name="P:Dbarone.Net.CommentarioServer.DocumentGenerator.AllowOverwrite">
            <summary>
            Set to true to allow the output documentation file to be overwritten. Otherwise an exception will be throw if the file exists.
            </summary>
        </member>
        <member name="P:Dbarone.Net.CommentarioServer.DocumentGenerator.XmlCommentsPath">
            <summary>
            The xml comments path.
            </summary>
        </member>
        <member name="P:Dbarone.Net.CommentarioServer.DocumentGenerator.ReadMePath">
            <summary>
            Optional path to an assembly readme. The contents are included at the top of the documentation file. 
            </summary>
        </member>
        <member name="P:Dbarone.Net.CommentarioServer.DocumentGenerator.StylesPath">
            <summary>
            Optional path to a styles file. For html output, the file must be a valid css file.
            </summary>
        </member>
        <member name="P:Dbarone.Net.CommentarioServer.DocumentGenerator.Styles">
            <summary>
            The styles content. For html output, this must be valid css content.
            </summary>
        </member>
        <member name="P:Dbarone.Net.CommentarioServer.DocumentGenerator.Comments">
            <summary>
            The xml comments.
            </summary>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.DocumentGenerator.Create(System.String,System.String,Dbarone.Net.CommentarioServer.OutputType,System.Boolean,System.String,System.String,System.String)">
            <summary>
            Static factory method to create a new DocumentGenerator instance. 
            </summary>
            <param name="assemblyPath">The path to the assembly file.</param>
            <param name="outputPath">The path to the output documentation file.</param>
            <param name="outputType">The documentation format type.</param>
            <param name="allowOverwrite">Set to true to allow existing output documentation file to be overwritten. Otherwise an exception will be thrown if the output file exists.</param>
            <param name="xmlCommentsPath">The path to an xml comments file. This content will be merged with the reflected assembly information.</param>
            <param name="readMePath">The path to an optional readme file. This file should contain html content. If a file is specified, it will be included at the top of the documentation file.</param>
            <param name="stylesPath">The path to an optional styles file.</param>
            <returns>Returns a <see cref="T:Dbarone.Net.CommentarioServer.DocumentGenerator"/> instance.</returns>
            <exception cref="T:System.Exception">Throws an exception if invalid parameters are provided.</exception>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.DocumentGenerator.#ctor(System.String,System.String,System.Boolean,System.String,System.String,System.String)">
            <summary>
            Creates a new DocumentGenerator instance.
            </summary>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.DocumentGenerator.GetAssembly">
            <summary>
            Gets the assembly referenced by the <c>AssemblyPath</c> parameter.
            </summary>
            <remarks>
            Uses MetadataLoadContext to load assembly metadata only for inspection.
            </remarks>
            <returns>The Assembly object.</returns>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.DocumentGenerator.GetTypes">
            <summary>
            Gets all types in the source assembly.
            </summary>
            <returns>Returns an array of <c>Type</c> objects.</returns>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.DocumentGenerator.GetInheritedType(System.Type)">
            <summary>
            Gets the inherited or base type, if any.
            </summary>
            <param name="type">The type to check.</param>
            <returns>Returns the base type, or null.</returns>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.DocumentGenerator.GetSubClasses(System.Type)">
            <summary>
            Gets the subclasses - types which directly inherit from the specified type.
            </summary>
            <param name="type">The type to check.</param>
            <returns>Returns an array of types that directly inherit from the specified type.</returns>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.DocumentGenerator.GetInterfacesImplemented(System.Type)">
            <summary>
            Gets the interfaces implemented by a type.
            </summary>
            <param name="type">The type to check.</param>
            <returns>Returns an array of interface types implemented by the specified type.</returns>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.DocumentGenerator.GetTypeCategory(System.Type)">
            <summary>
            Gets the category of a type.
            </summary>
            <remarks>
            <list type="table">
            <listheader>
            <term>Category</term>
            <description>Description</description>
            </listheader>
            <item>
            <term>Class</term>
            <description>The type is a class (reference type).</description>
            </item>
            <item>
            <term>Struct</term>
            <description>The type is a struct (value type).</description>
            </item>
            <item>
            <term>Interface</term>
            <description>The type is an interface.</description>
            </item>
            <item>
            <term>Enum</term>
            <description>The type is an enum.</description>
            </item>
            <item>
            <term>Other</term>
            <description>The type is unspecified.</description>
            </item>
            </list>
            </remarks>
            <param name="type">The type to check.</param>
            <returns>Returns a string value to categorise the type:</returns>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.DocumentGenerator.GetClasses">
            <summary>
            Gets a list of classes for the source Assembly.
            </summary>
            <returns>Returns an array of class types.</returns>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.DocumentGenerator.GetStructs">
            <summary>
            Gets a list of structs for the source Assembly.
            </summary>
            <returns>Returns an array of struct types.</returns>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.DocumentGenerator.GetInterfaces">
            <summary>
            Gets a list of interfaces for the source Assembly.
            </summary>
            <returns>Returns an array of interface types.</returns>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.DocumentGenerator.GetEnums">
            <summary>
            Gets a list of enums for the source Assembly.
            </summary>
            <returns>Returns an array of enum types.</returns>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.DocumentGenerator.GetMembers(System.Type)">
            <summary>
            Gets public or protected members for a type.
            </summary>
            <param name="type">The type to get members for.</param>
            <returns>Returns all public and protected members.</returns>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.DocumentGenerator.GetConstructors(System.Type)">
            <summary>
            Gets the public or protected constructors for a type.
            </summary>
            <param name="type">The type to get constructors for.</param>
            <returns>Returns all public and protected constructors.</returns>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.DocumentGenerator.GetMethods(System.Type)">
            <summary>
            Gets the public or protected methods for a type.
            </summary>
            <param name="type">The type to get methods for.</param>
            <returns>Returns all public and protected methods.</returns>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.DocumentGenerator.GetFields(System.Type)">
            <summary>
            Gets the public or protected fields for a type.
            </summary>
            <param name="type">The type to get fields for.</param>
            <returns>Returns all public and protected fields.</returns>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.DocumentGenerator.GetProperties(System.Type)">
            <summary>
            Gets the public or protected properties for a type.
            </summary>
            <param name="type">The type to get properties for.</param>
            <returns>Returns all public and protected properties.</returns>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.DocumentGenerator.GetEvents(System.Type)">
            <summary>
            Gets the public or protected events for a type.
            </summary>
            <param name="type">The type to get events for.</param>
            <returns>Returns all public and protected events.</returns>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.DocumentGenerator.GetReadMe">
            <summary>
            Gets the optional readme content.
            </summary>
            <remarks>
            The readme content is optional and is specified as an optional file to be processed by Commentario.
            If specified, the contents of the file is read. This contents typically gets added into the top of the
            documentation. The contents must be the the appropriate format for the documentation output type.
            For example, for html documentation output, the readme file must contain valid html.
            </remarks>
            <returns>Returns a string value of the readme contents.</returns>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.DocumentGenerator.GetMemberParameters(System.Reflection.MemberInfo)">
            <summary>
            Gets the parameters for a method.
            </summary>
            <param name="member">The member to get parameters for. Member must be a <see cref="T:System.Reflection.MethodInfo"/>.</param>
            <returns>Retuns an array of <see cref="T:System.Reflection.ParameterInfo"/> objects.</returns>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.DocumentGenerator.GetLinkForType(System.Type)">
            <summary>
            Returns a hyperlink for a type.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.DocumentGenerator.GetTypeForCommentId(System.String)">
            <summary>
            Returns a type matching a comment id.
            </summary>
            <param name="commentId">The comment id.</param>
            <returns>Returns the type matching the comment id.</returns>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.DocumentGenerator.GenerateDocument">
            <summary>
            Generates the documentation.
            </summary>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.DocumentGenerator.RenderDocument">
            <summary>
            Abstract method to render document.
            </summary>
            <returns>Returns a string representation of the document.</returns>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.DocumentGenerator.RenderTypeGenericArguments(System.Type)">
            <summary>
            Renders the type's generic arguments.
            </summary>
            <param name="type">The type to render.</param>
            <returns>A string representing the generic arguments.</returns>
        </member>
        <member name="T:Dbarone.Net.CommentarioServer.HtmlDocumentGenerator">
            <summary>
            Generates documentation in html format. Html implementation of <see cref="T:Dbarone.Net.CommentarioServer.DocumentGenerator"/>.
            </summary>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.HtmlDocumentGenerator.#ctor(System.String,System.String,System.Boolean,System.String,System.String,System.String)">
            <summary>
            Creates a new HtmlDocumentGenerator instance.
            </summary>
            <param name="assemblyPath">The source assembly path.</param>
            <param name="outputPath">The output documentation path.</param>
            <param name="allowOverwrite">Set to true to overwrite the output path.</param>
            <param name="xmlCommentsPath">Optional xml comments path.</param>
            <param name="readMePath">Optional readme path.</param>
            <param name="stylesPath">Optional path to styles file.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Dbarone.Net.CommentarioServer.HtmlDocumentGenerator.RenderSee(Dbarone.Net.CommentarioServer.SeeNode)" -->
        <member name="T:Dbarone.Net.CommentarioServer.ExtensionMethods">
            <summary>
            Useful extension methods. Primarily to provide reflection services.
            </summary>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.ExtensionMethods.ToCommentId(System.Reflection.MemberInfo)">
            <summary>
            Returns a comment id string for a given type member. Can be used to locate the comments from xml comments file. 
            </summary>
            <param name="member">The MemberInfo object.</param>
            <returns>Returns a comment id string.</returns>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.ExtensionMethods.ToCommentId(System.Type)">
            <summary>
            Returns a comment id string for a type which can be used to locate the type comments from the xml comments file
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.ExtensionMethods.GetTypeGenericArguments(System.Type)">
            <summary>
            Gets the type letter arguments for a generic type.
            </summary>
            <param name="type">A type. Must be a generic type.</param>
            <returns>Returns an array of type parameter names.</returns>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.ExtensionMethods.IsGeneric(System.Type)">
            <summary>
            Checks if a type is a generic type.
            </summary>
            <param name="type">The type to check.</param>
            <returns>Returns true if the type is a generic type.</returns>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.ExtensionMethods.IsNullable(System.Type,System.Type@)">
            <summary>
            Checks whether a type is a nullable type.
            </summary>
            <param name="type">The type to check.</param>
            <param name="underlyingType">Returns true if the type is a nullable type.</param>
            <returns></returns>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.ExtensionMethods.GetSignature(System.Reflection.MethodInfo,System.Boolean)">
            <summary>
            Gets the signature for a method.
            </summary>
            <param name="method">The method to get the signature for.</param>
            <param name="isInvokable"></param>
            <returns>Returns a signature.</returns>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.ExtensionMethods.GetSignature(System.Reflection.ConstructorInfo,System.Boolean)">
            <summary>
            Gets the signature for a constructor method.
            </summary>
            <param name="constructor">The constructor to get the signature for.</param>
            <param name="isInvokable"></param>
            <returns>Returns a signature.</returns>
        </member>
        <member name="T:Dbarone.Net.CommentarioServer.OutputType">
            <summary>
            Specifies the output type for the documentation.
            </summary>
        </member>
        <member name="F:Dbarone.Net.CommentarioServer.OutputType.html">
            <summary>
            Html format.
            </summary>
        </member>
        <member name="T:Dbarone.Net.CommentarioServer.ConstructorMethodSignature">
            <summary>
            Creates signatures for constructor methods.
            </summary>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.MethodBaseSignature.GetAccessModifier(System.Reflection.MethodBase)">
            <summary>
            Gets the method access modifier.
            https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/access-modifiers
            </summary>
            <param name="method">The method</param>
            <returns>Returns the access modifier.</returns>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.TypeSignature.Build(System.Type)">
            <summary>
            Get a fully qualified signature for <paramref name="type"/>
            </summary>
            <param name="type">Type. May be generic or <see cref="T:System.Nullable`1"/></param>
            <returns>Fully qualified signature</returns>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.TypeSignature.BuildGenerics(System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Takes an <see cref="T:System.Collections.Generic.IEnumerable`1"/> and creates a generic type signature (&lt;string, string&gt; for example)
            </summary>
            <param name="genericArgumentTypes"></param>
            <returns>Generic type signature like &lt;Type, ...&gt;</returns>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.TypeSignature.GetQualifiedTypeName(System.Type)">
            <summary>
            Gets the fully qualified type name of <paramref name="type"/>.
            This will use any keywords in place of types where possible (string instead of System.String for example)
            </summary>
            <param name="type"></param>
            <returns>The fully qualified name for <paramref name="type"/></returns>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.TypeSignature.RemoveGenericTypeNameArgumentCount(System.String)">
            <summary>
            This removes the `{argumentcount} from a the signature of a generic type
            </summary>
            <param name="genericTypeSignature">Signature of a generic type</param>
            <returns><paramref name="genericTypeSignature"/> without any argument count</returns>
        </member>
        <member name="T:Dbarone.Net.CommentarioServer.AssemblyNode">
            <summary>
            Represents the top level assembly node in the documentation.
            </summary>
        </member>
        <member name="P:Dbarone.Net.CommentarioServer.AssemblyNode.Name">
            <summary>
            The assembly name.
            </summary>
        </member>
        <member name="T:Dbarone.Net.CommentarioServer.CNode">
            <summary>
            Denotes text within a description should be marked as single-line code.
            </summary>
        </member>
        <member name="T:Dbarone.Net.CommentarioServer.CodeNode">
            <summary>
            Denotes a block of code in a descriptive text block.
            </summary>
        </member>
        <member name="T:Dbarone.Net.CommentarioServer.DocumentNode">
            <summary>
            Represents the root node of the xml comments file.
            </summary>
        </member>
        <member name="P:Dbarone.Net.CommentarioServer.DocumentNode.Assembly">
            <summary>
            The assembly node. Provides information about the assembly.
            </summary>
        </member>
        <member name="P:Dbarone.Net.CommentarioServer.DocumentNode.Members">
            <summary>
            The collection of members. Members can describe .NET types and members.
            </summary>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.DocumentNode.GetDocumentForType(System.Type)">
            <summary>
            Gets the xml comment node for a specific type.
            </summary>
            <param name="type">The type to get document for.</param>
            <returns>Returns the document node for the type.</returns>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.DocumentNode.GetDocumentForMember(System.Reflection.MemberInfo)">
            <summary>
            Gets the xml comment node for the specific member.
            </summary>
            <param name="member">The member to get the document for.</param>
            <returns>Returns the document node for the member.</returns>
        </member>
        <member name="T:Dbarone.Net.CommentarioServer.ExampleNode">
            <summary>
            Denotes an example, typically code examples.
            </summary>
        </member>
        <member name="T:Dbarone.Net.CommentarioServer.ExceptionNode">
            <summary>
            A description of an exception that can be thrown.
            </summary>
        </member>
        <member name="P:Dbarone.Net.CommentarioServer.ExceptionNode.Name">
            <summary>
            The exception type name that is thrown.
            </summary>
        </member>
        <member name="T:Dbarone.Net.CommentarioServer.IDString">
            <summary>
            Represents the parts making up a comment document id, known as the 'ID string'.
            https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/documentation-comments
            </summary>
        </member>
        <member name="P:Dbarone.Net.CommentarioServer.IDString.Id">
            <summary>
            The full member id string. In format [MemberType]:[memberid]
            </summary>
        </member>
        <member name="P:Dbarone.Net.CommentarioServer.IDString.FullyQualifiedName">
            <summary>
            The id value after the initial ':' character.
            </summary>
        </member>
        <member name="P:Dbarone.Net.CommentarioServer.IDString.MemberType">
            <summary>
            The member type.
            </summary>
        </member>
        <member name="P:Dbarone.Net.CommentarioServer.IDString.Name">
            <summary>
            The name of the type or member. This optionally includes the namespace and the parent / enclosing type name. 
            </summary>
        </member>
        <member name="P:Dbarone.Net.CommentarioServer.IDString.MemberName">
            <summary>
            The member name. Only applies for members.
            </summary>
        </member>
        <member name="P:Dbarone.Net.CommentarioServer.IDString.FullyQualifiedNameLink">
            <summary>
            Unique link tag based on fully qualified name. Used for generaing links for TOC etc.
            </summary>
        </member>
        <member name="P:Dbarone.Net.CommentarioServer.IDString.ParentTypeArguments">
            <summary>
            The number of generic type arguments on the parent type / class. 
            </summary>
        </member>
        <member name="P:Dbarone.Net.CommentarioServer.IDString.TypeArguments">
            <summary>
            The number of generic type arguments on the current member. 
            </summary>
        </member>
        <member name="P:Dbarone.Net.CommentarioServer.IDString.Arguments">
            <summary>
            Arguments (if exist for methods and properties).
            </summary>
        </member>
        <member name="P:Dbarone.Net.CommentarioServer.IDString.TypeName">
            <summary>
            Returns the type name if the member is a type.
            </summary>
        </member>
        <member name="M:Dbarone.Net.CommentarioServer.IDString.#ctor(System.String)">
            <summary>
            constructor for IDString class.
            </summary>
            <param name="id">The ID string.</param>
        </member>
        <member name="T:Dbarone.Net.CommentarioServer.ItemsNode">
            <summary>
            An items node is a node that can contain multiple types of child node.
            </summary>
        </member>
        <member name="P:Dbarone.Net.CommentarioServer.ItemsNode.Items">
            <summary>
            The array of child item nodes. Multiple types of child item are permitted.
            </summary>
        </member>
        <member name="T:Dbarone.Net.CommentarioServer.ListNode">
            <summary>
            Used to create a list of items in a comment.
            </summary>
        </member>
        <member name="P:Dbarone.Net.CommentarioServer.ListNode.Type">
            <summary>
            The name of list. Can be bullet, number, or table.
            </summary>
        </member>
        <member name="T:Dbarone.Net.CommentarioServer.MemberNode">
            <summary>
            Describes a single member in the xml comments. A member can be either a .NET Type or a .NET member for a type (for example a method, property, field etc).
            </summary>
        </member>
        <member name="P:Dbarone.Net.CommentarioServer.MemberNode.Name">
            <summary>
            The name of the member.
            </summary>
            <remarks>
            The format of the name is called an ID String: https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/xmldoc/
            The string uniquely identifies the member.
            </remarks>
            <example>
            Using the code example shown below:
            <code>
            public class Test
            {
                public int Add(int a, int b)
                {
                    return a + b;
                }
            }
            </code>
            The above method could generate a name of <c>M:ExampleLibrary.Test.Add(System.Int32,System.Int32)</c>
            <para>
            Note that the return type is not included in the name.
            </para>
            </example>
        </member>
        <member name="T:Dbarone.Net.CommentarioServer.MemberType">
            <summary>
            The member type.
            </summary>
        </member>
        <member name="F:Dbarone.Net.CommentarioServer.MemberType.Namespace">
            <summary>
            The member is a namespace.
            </summary>
        </member>
        <member name="F:Dbarone.Net.CommentarioServer.MemberType.Type">
            <summary>
            The member is a type.
            </summary>
        </member>
        <member name="F:Dbarone.Net.CommentarioServer.MemberType.Field">
            <summary>
            The member is a field.
            </summary>
        </member>
        <member name="F:Dbarone.Net.CommentarioServer.MemberType.Property">
            <summary>
            The member is a property.
            </summary>
        </member>
        <member name="F:Dbarone.Net.CommentarioServer.MemberType.Method">
            <summary>
            The member is a method.
            </summary>
        </member>
        <member name="F:Dbarone.Net.CommentarioServer.MemberType.Event">
            <summary>
            The member is an event.
            </summary>
        </member>
        <member name="F:Dbarone.Net.CommentarioServer.MemberType.ErrorString">
            <summary>
            The member is an error?
            </summary>
        </member>
        <member name="T:Dbarone.Net.CommentarioServer.ParamNode">
            <summary>
            Comment for a parameter on a method. The items property stores the descriptions.
            </summary>
        </member>
        <member name="P:Dbarone.Net.CommentarioServer.ParamNode.Name">
            <summary>
            The name of the parameters.
            </summary>
        </member>
        <member name="T:Dbarone.Net.CommentarioServer.ParaNode">
            <summary>
            Represents a paragraph of text in a description field.
            </summary>
        </member>
        <member name="T:Dbarone.Net.CommentarioServer.RemarkNode">
            <summary>
            Expands on the summary sentence to provide more information for readers.
            </summary>
        </member>
        <member name="T:Dbarone.Net.CommentarioServer.ReturnsNode">
            <summary>
            The ReturnsNode describes the return value of a method.
            </summary>
        </member>
        <member name="T:Dbarone.Net.CommentarioServer.SeeNode">
            <summary>
            Allows you to specify a link from text.
            </summary>
        </member>
        <member name="T:Dbarone.Net.CommentarioServer.SummaryNode">
            <summary>
            Every class and member should have a one sentence summary describing its purpose.
            </summary>
        </member>
        <member name="T:Dbarone.Net.CommentarioServer.TextNode">
            <summary>
            A text node represents a node in the xml comments that only has inner text.
            This text is not processed any further, and the literal value is used as is. 
            </summary>
        </member>
        <member name="P:Dbarone.Net.CommentarioServer.TextNode.Text">
            <summary>
            The inner text value. This text is not processed any further.
            </summary>
        </member>
        <member name="T:Dbarone.Net.CommentarioServer.TypeParamNode">
            <summary>
            Represents a type parameter comment.
            </summary>
        </member>
        <member name="P:Dbarone.Net.CommentarioServer.TypeParamNode.Name">
            <summary>
            The name of the type parameter.
            </summary>
        </member>
        <member name="T:XmlComments">
            <summary>
            Class to process the xml comments file
            </summary>
        </member>
    </members>
</doc>
